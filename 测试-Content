软件测试

PIE Model：通过错误的代码（Execution）执行，触发（Infection）错误的中间态，传播（Propagation）至外在表现。
	Fault：缺陷，静态
	Error：错误，动态
	Failure：失效，Error的表现
测试用例：测试输入（Test Input）+测试预言（Test Oracle）+ 环境（Environment）

目的：设计测试用例，以最小的代价，在最短的时间内系统的发现各种不同类型的错误。
	1）：测试是程序的执行过程，目的在于发现错误。
	2）：一个好的测试用例在于发现至今未发现的错误。
	3）：一个成功的测试是发现至今未发现的错误的测试。  

方法：静态测试与动态测试
	1）静态测试：不运行程序，主要是对编程格式、结构等方面进行评估。
		代码检查：检查代码和设计的一致性，代码对标准的遵循和可读性
		静态结构分析：以图形表示程序内部结构（函数关系调用图和模块控制流图

	2）动态测试：测试运行中的程序，通过输入测试案例对运行情况及输入输出进行分
		白盒测试 		黑盒测试

白盒测试：证明每种内部操作和过程是否符合设计规格和要求。
	检查： 1）：对程序模块的所有独立的执行路径至少测试一次。
		2）：对所有逻辑判定的真假条件都能至少测试一次。
		3）：在循环的边界和运行界限内执行循环体。
		4）：测试内部数据结构的有效性。
	方法：逻辑覆盖和基本路径覆盖。
		逻辑覆盖）：设计白盒测试用例的方法。
			1）语句覆盖：选择足够多的测试数据，使每条语句都至少执行一次
			2）判定覆盖：设计足够的测试用例，使每次判断都获得一次TRUE和
					FALSE执行。
			3）条件覆盖：设计足够的测试用例，使每次判断中的每个TRUE和	
					FALSE分支至少执行一次。
			4）判断-条件覆盖：用例既满足判断覆盖也满足条件覆盖。
			5）条件组合覆盖：设计足够的测试用例，使每个判断的所有可能的条
					件取值组合至少执行一次。
		基本路径覆盖）：
			1）控制流图
			2）计算环复杂度V(G)：E-N+2 / P+1 （E：流图中边数，N：流图中点
					数，P：流图中判定结点数）
			3）确定线性无关的基本路径集

黑盒测试：测试检验每个功能是否都能正常使用，亦称功能测试
	定义：在不考虑程序内部结构和内部特性的情况下，测试程序接口；它只检查程序功		
		能是否按照规格说明书的规定正常使用，程序是否能够正常的接收输入数据而
		产生正确的输出信息。
	缺点：如果外部特性本身又问题或规格说明的规定有误，此测试方法发现不了错误。
	检查： 1）：功能不正确或遗漏
		2）：界面错误
		3）：数据库访问错误
		4）：性能错误
		5）：初始化和终止错误

	方法：等价类划分法、边界值分析法、错误推测法、因果图法、判定表驱动法

		等价类划分法：等价类是对某个输入域的子集合，此法目的在于利用少量的等
			价类获得较好的测试结果。测试案例于有效等价类和无效等价类为：一
			对多 ； 一对一
		边界值分析法：每个变量的测试输入选择min，min+1，max-1，max，x五个
			数。n变量程序共产生4n+1个测试用例。
		错误推测法：根据经验和直觉判断程序中可能会出现的错误。
		因果图法：是一种将自然语言规格说明转换为形式语言规格说明的方法，可以
				指出规格说明存在的不完整性和二义性。
	
					
测试过程：按照测试的先后次序形成不同的测试步骤。分为单元测试、集成测试、确认测试、
		系统测试和验收测试。

	单元测试： 针对每个单元的测试，以确保每个模块能正常工作。大量使用白盒测试，
			以发现程序内部的错误。
		1）目的：检验程序的最小单位，既检查模块有无错误。
		2）5个问题：模块接口，局部数据结构，边界条件，路径测试和错误处理。

	集成测试：组装已测试过的模块，进行集成测试。检验程序结构问题，采用黑盒测
			试。
		1）方法：整体集成的非增量式测试和逐步集成的增量式测试（自顶向上或自
			顶向下）
	确认测试：检验软件是否能满足所有功能和性能需求的最后手段，采用黑盒测试。
	系统测试：检验是否能与系统的其他部分（如硬件，数据库，工作人员）协调工作。
	验收测试：检验软件产品质量，以用户角度。
